name: Release with Changesets

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Cache Swift PM
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build Debug
        run: swift build -v

      - name: Build Release
        run: swift build -c release -v

      - name: Test
        run: swift test -v

  release:
    needs: test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (for changesets only)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install changesets
        run: npm install -g @changesets/cli

      - name: Check for changesets
        id: changesets
        run: |
          if [ ! -d ".changeset" ] || [ -z "$(ls -A .changeset/*.md 2>/dev/null | grep -v README)" ]; then
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "No changesets found"
          else
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "Changesets found"
          fi

      - name: Generate version and changelog
        if: steps.changesets.outputs.has_changesets == 'true'
        run: |
          # Generate changelog and consume changesets
          changeset version
          
          # Extract new version from changelog
          VERSION=$(grep "^## " CHANGELOG.md | head -1 | sed 's/## //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # Update Swift CLI version
          sed -i '' "s/version: \"[^\"]*\"/version: \"$VERSION\"/" Sources/Things2CalendarCLI.swift

      - name: Create Release PR or Release
        if: steps.changesets.outputs.has_changesets == 'true'
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are changes to commit
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Commit changes
          git add -A
          git commit -m "chore: release v${VERSION}" || echo "Nothing to commit"
          
          # Create tag and push
          git tag "v${VERSION}"
          git push origin main
          git push origin "v${VERSION}"

  build-release:
    needs: [test]
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and sign executable
        run: |
          # Build release binary
          swift build -c release
          
          # Create entitlements file
          cat > Things2Calendar.entitlements << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
          	<key>com.apple.security.personal-information.calendars</key>
          	<true/>
          </dict>
          </plist>
          EOF
          
          # Sign the executable
          codesign --force --sign - --entitlements Things2Calendar.entitlements .build/release/Things2Calendar
          
          # Create convenience symlink
          cd .build/release && ln -sf Things2Calendar t2c

      - name: Create archive
        run: |
          mkdir -p release
          cp .build/release/Things2Calendar release/
          cp .build/release/t2c release/
          tar -czf Things2Calendar-${{ steps.version.outputs.VERSION }}-macos.tar.gz -C release .

      - name: Calculate checksum
        id: checksum
        run: |
          CHECKSUM=$(shasum -a 256 Things2Calendar-${{ steps.version.outputs.VERSION }}-macos.tar.gz | cut -d ' ' -f 1)
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            Things2Calendar-${{ steps.version.outputs.VERSION }}-macos.tar.gz
          body: |
            ## Changes

            See the [changelog](CHANGELOG.md) for details.

            ## Installation

            ### Homebrew (Recommended)
            ```bash
            brew install lennartgastler/tap/things2calendar
            ```

            ### Manual Installation
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/Things2Calendar-${{ steps.version.outputs.VERSION }}-macos.tar.gz | tar xz
            sudo mv Things2Calendar /usr/local/bin/
            sudo mv t2c /usr/local/bin/
            ```

            **SHA256 Checksum:** `${{ steps.checksum.outputs.CHECKSUM }}`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
